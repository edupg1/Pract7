
package paintbasico;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;

/**
 *
 * @author EDUARDO
 */
public class Lienzo extends javax.swing.JPanel {

    Point p,pini,pfin;
    int forma = 0;
    boolean relleno;
    Color color = new Color(0,0,0);
    public Lienzo() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        p = evt.getPoint();
        this.repaint();
    }//GEN-LAST:event_formMouseClicked

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        pfin = evt.getPoint();
        this.repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        pini = evt.getPoint();
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        pfin= evt.getPoint();
        this.repaint();
    }//GEN-LAST:event_formMouseReleased

    @Override
    public void paint(Graphics g)
    {
        super.paint(g);
        g.setColor(color);
        
     if(forma==1){
        if(p !=null){
            g.fillOval(p.x, p.y,10, 10);  
        }
        
     }
      else if(forma==2){
             if(pini !=null && pfin != null)
            {
                g.drawLine(pini.x, pini.y, pfin.x, pfin.y);
            }
      }
      else if(forma==3){
          if(pini != null && pfin != null){
              int x = Math.min(this.pini.x, this.pfin.x);
              int y = Math.min(this.pini.y, this.pfin.y);
              int ancho = Math.abs(this.pini.y - this.pfin.y);
              int alto = Math.abs(this.pini.x - this.pfin.x);
              if(relleno==true)
                g.fillOval(x, y,alto , ancho);
              else
                g.drawOval(x, y, alto, ancho);
          }
      }
      else if(forma==4)
      {
         if(pini != null && pfin != null)
         {
              int x = Math.min(this.pini.x, this.pfin.x);
              int y = Math.min(this.pini.y, this.pfin.y);
              int ancho = Math.abs(this.pini.y - this.pfin.y);
              int alto = Math.abs(this.pini.x - this.pfin.x);
              if(relleno == true)  
                  g.fillRect(x, y, alto, ancho);
              else
                   g.drawRect(x, y, alto, ancho);
         }
      }
    }
    
    public void setForma(int n)
    {
        this.forma=n;    
    }
    
    public void setRelleno(boolean b)
    {
        this.relleno = b;
    }
    public void setColor(Color c)
    {
        this.color = c;
    }
    public void setLienzo()
    {
        this.p = null;
        this.pini=null;
        this.pfin=null;
        this.repaint();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
